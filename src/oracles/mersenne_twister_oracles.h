#pragma once

// Oracle that simulates passing an unknown amount of time, during which the mersenne twister prng
// is seeded with the current elapsed time, and then returns the first value from the seeded prng.
// Rather than actually passing the time, this function performs the operations immediately and
// tells the caller the simulated amount of time that elapsed.
unsigned int mersenne_twister_time_delay_oracle(int* const elapsed_time);

// Oracle that prepends the plaintext with an unknown number of unknown bytes and then encrypts this
// via MT stream cipher using an unknown key. The given ciphertext buffer must already have the
// needed amount of space, which you can determine with the mt_stream_random_prefix_oracle_size
// function.
void mt_stream_random_prefix_oracle(
    const unsigned char* const plaintext,
    const int plaintext_size,
    unsigned char* const ciphertext
);

// Give the size needed to hold the ciphertext generated by mt_stream_random_prefix_oracle for the
// given plaintext size.
int mt_stream_random_prefix_oracle_size(const int plaintext_size);
